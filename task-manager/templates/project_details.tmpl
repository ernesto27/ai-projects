{{ template "header" . }}

<div class="max-w-full mx-auto px-6 sm:px-8 lg:px-12 py-12">
  <!-- Success message alert -->
  <div id="successMessage" class="hidden mb-6 rounded-md bg-green-50 p-4 border border-green-200">
    <div class="flex">
      <div class="flex-shrink-0">
        <svg class="h-5 w-5 text-green-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
          <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd" />
        </svg>
      </div>
      <div class="ml-3">
        <p class="text-sm font-medium text-green-800" id="successMessageText">Project created successfully!</p>
      </div>
      <div class="ml-auto pl-3">
        <div class="-mx-1.5 -my-1.5">
          <button id="closeSuccessMessage" type="button" class="inline-flex rounded-md p-1.5 text-green-500 hover:bg-green-100 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500">
            <span class="sr-only">Dismiss</span>
            <svg class="h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
              <path fill-rule="evenodd" d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z" clip-rule="evenodd" />
            </svg>
          </button>
        </div>
      </div>
    </div>
  </div>

  <!-- Project header with buttons below project name -->
  <div class="mb-12">
    <div class="mb-4">
      <h1 class="text-4xl font-bold text-gray-900">{{ .Project.Name }}</h1>
      <p class="text-md text-gray-500 mt-1">Key: {{ .Project.Key }}</p>
    </div>
    <div class="flex flex-wrap gap-3 mt-4">
      <a href="/projects/{{ .Project.ID }}/tasks" class="bg-blue-600 hover:bg-blue-700 text-white font-medium py-2 px-4 text-sm rounded-lg transition duration-150 ease-in-out shadow-sm">
        Tasks
      </a>
      <a href="/projects/{{ .Project.ID }}/edit" class="bg-blue-600 hover:bg-blue-700 text-white font-medium py-2 px-4 text-sm rounded-lg transition duration-150 ease-in-out shadow-sm">
        Edit Project
      </a>
      <button id="deleteProject" class="bg-red-600 hover:bg-red-700 text-white font-medium py-2 px-4 text-sm rounded-lg transition duration-150 ease-in-out shadow-sm">
        Delete Project
      </button>
    </div>
  </div>

  <!-- Project information card with improved spacing and styling -->
  <div class="bg-white shadow-lg rounded-xl overflow-hidden mb-10 border border-gray-100">
    <div class="px-8 py-6 bg-gradient-to-r from-blue-50 to-white">
      <h3 class="text-xl leading-6 font-semibold text-gray-900">Project Information</h3>
      <p class="mt-2 text-md text-gray-600">Details about the project.</p>
    </div>
    <div class="border-t border-gray-200">
      <dl class="divide-y divide-gray-200">
        <div class="py-6 sm:py-8 px-8 sm:grid sm:grid-cols-3 sm:gap-8">
          <dt class="text-md font-medium text-gray-600">Project name</dt>
          <dd class="mt-2 text-md text-gray-900 sm:mt-0 sm:col-span-2">{{ .Project.Name }}</dd>
        </div>
        <div class="py-6 sm:py-8 px-8 sm:grid sm:grid-cols-3 sm:gap-8 bg-gray-50">
          <dt class="text-md font-medium text-gray-600">Key</dt>
          <dd class="mt-2 text-md text-gray-900 sm:mt-0 sm:col-span-2">{{ .Project.Key }}</dd>
        </div>
        <div class="py-6 sm:py-8 px-8 sm:grid sm:grid-cols-3 sm:gap-8">
          <dt class="text-md font-medium text-gray-600">Description</dt>
          <dd class="mt-2 text-md text-gray-900 sm:mt-0 sm:col-span-2">
            {{ if .Project.Description }}
              {{ .Project.Description }}
            {{ else }}
              <span class="text-gray-400 italic">No description provided</span>
            {{ end }}
          </dd>
        </div>
        <div class="py-6 sm:py-8 px-8 sm:grid sm:grid-cols-3 sm:gap-8 bg-gray-50">
          <dt class="text-md font-medium text-gray-600">Project Owner</dt>
          <dd class="mt-2 text-md text-gray-900 sm:mt-0 sm:col-span-2">
            <div class="flex items-center space-x-2">
              <div class="flex-shrink-0 h-8 w-8 bg-blue-100 rounded-full flex items-center justify-center">
                <span class="text-blue-800 font-medium">{{ slice .Project.Owner.Name 0 1 }}</span>
              </div>
              <span>{{ .Project.Owner.Name }}</span>
              <span class="text-gray-500">({{ .Project.Owner.Email }})</span>
            </div>
          </dd>
        </div>
        <div class="py-6 sm:py-8 px-8 sm:grid sm:grid-cols-3 sm:gap-8">
          <dt class="text-md font-medium text-gray-600">Created At</dt>
          <dd class="mt-2 text-md text-gray-900 sm:mt-0 sm:col-span-2">{{ .Project.CreatedAt }}</dd>
        </div>
      </dl>
    </div>
  </div>

  <!-- Delete confirmation modal -->
  <div id="deleteModal" class="fixed z-10 inset-0 overflow-y-auto hidden">
    <div class="flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0">
      <div class="fixed inset-0 transition-opacity" aria-hidden="true">
        <div class="absolute inset-0 bg-gray-500 opacity-75"></div>
      </div>
      <span class="hidden sm:inline-block sm:align-middle sm:h-screen" aria-hidden="true">&#8203;</span>
      <div class="inline-block align-bottom bg-white rounded-xl text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full">
        <div class="bg-white px-6 pt-6 pb-5 sm:p-8">
          <div class="sm:flex sm:items-start">
            <div class="mx-auto flex-shrink-0 flex items-center justify-center h-14 w-14 rounded-full bg-red-100 sm:mx-0 sm:h-12 sm:w-12">
              <svg class="h-7 w-7 text-red-600" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor" aria-hidden="true">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z" />
              </svg>
            </div>
            <div class="mt-3 text-center sm:mt-0 sm:ml-6 sm:text-left">
              <h3 class="text-xl leading-6 font-semibold text-gray-900" id="modal-title">
                Delete project
              </h3>
              <div class="mt-3">
                <p class="text-md text-gray-600">
                  Are you sure you want to delete this project? This action cannot be undone and will permanently delete all related data.
                </p>
              </div>
            </div>
          </div>
        </div>
        <div class="bg-gray-50 px-6 py-4 sm:px-8 sm:py-5 sm:flex sm:flex-row-reverse">
          <button id="confirmDelete" type="button" class="w-full inline-flex justify-center rounded-lg border border-transparent shadow-sm px-6 py-3 bg-red-600 text-base font-medium text-white hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500 sm:ml-3 sm:w-auto sm:text-md">
            Delete
          </button>
          <button id="cancelDelete" type="button" class="mt-3 w-full inline-flex justify-center rounded-lg border border-gray-300 shadow-sm px-6 py-3 bg-white text-base font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 sm:mt-0 sm:ml-3 sm:w-auto sm:text-md">
            Cancel
          </button>
        </div>
      </div>
    </div>
  </div>

  <div id="errorMessage" class="mt-6 p-4 bg-red-50 text-red-700 text-md rounded-lg hidden"></div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const deleteButton = document.getElementById('deleteProject');
    const deleteModal = document.getElementById('deleteModal');
    const confirmDelete = document.getElementById('confirmDelete');
    const cancelDelete = document.getElementById('cancelDelete');
    const errorMessage = document.getElementById('errorMessage');
    const successMessage = document.getElementById('successMessage');
    const closeSuccessMessage = document.getElementById('closeSuccessMessage');

    // Check URL for success parameter
    const urlParams = new URLSearchParams(window.location.search);
    if (urlParams.get('success') === 'true') {
      successMessage.classList.remove('hidden');
      
      // Auto-hide success message after 5 seconds
      setTimeout(function() {
        successMessage.classList.add('hidden');
      }, 5000);
    }

    // Show delete confirmation modal
    deleteButton.addEventListener('click', function() {
      deleteModal.classList.remove('hidden');
    });

    // Hide delete confirmation modal
    cancelDelete.addEventListener('click', function() {
      deleteModal.classList.add('hidden');
    });

    // Confirm delete action
    confirmDelete.addEventListener('click', function() {
      errorMessage.classList.add('hidden');
      
      fetch('/api/projects/{{ .Project.ID }}', {
        method: 'DELETE',
        headers: {
          'Content-Type': 'application/json',
          'Authorization': 'Bearer ' + localStorage.getItem('token')
        }
      })
      .then(response => {
        if (!response.ok) {
          return response.json().then(err => { throw err; });
        }
        return response.json();
      })
      .then(data => {
        window.location.href = '/projects?success=true&action=deleted';
      })
      .catch(error => {
        deleteModal.classList.add('hidden');
        errorMessage.textContent = error.error || 'An error occurred. Please try again.';
        errorMessage.classList.remove('hidden');
      });
    });

    // Close success message
    closeSuccessMessage.addEventListener('click', function() {
      successMessage.classList.add('hidden');
    });
  });
</script>

{{ template "footer" . }}