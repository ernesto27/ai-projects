{{ template "header" . }}

<div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12">
  <!-- Success message alert -->
  <div id="successMessage" class="hidden mb-8 rounded-md bg-green-50 p-4 border border-green-200">
    <div class="flex">
      <div class="flex-shrink-0">
        <svg class="h-5 w-5 text-green-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
          <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd" />
        </svg>
      </div>
      <div class="ml-3">
        <p class="text-sm font-medium text-green-800" id="successMessageText">Task updated successfully!</p>
      </div>
      <div class="ml-auto pl-3">
        <div class="-mx-1.5 -my-1.5">
          <button id="closeSuccessMessage" type="button" class="inline-flex rounded-md p-1.5 text-green-500 hover:bg-green-100 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500">
            <span class="sr-only">Dismiss</span>
            <svg class="h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
              <path fill-rule="evenodd" d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z" clip-rule="evenodd" />
            </svg>
          </button>
        </div>
      </div>
    </div>
  </div>

  <div class="grid grid-cols-1 lg:grid-cols-3 gap-8">
    <!-- Left sidebar with project info and navigation -->
    <div class="lg:col-span-1">
      <div class="bg-white shadow-lg rounded-xl overflow-hidden border border-gray-100 sticky top-8">
        <div class="px-6 py-5 border-b border-gray-200 bg-gradient-to-r from-indigo-50 to-white">
          <div class="flex items-center justify-between">
            <h3 class="text-lg font-medium text-gray-900">Project</h3>
            <a href="/projects/{{ .Project.ID }}" class="text-sm text-indigo-600 hover:text-indigo-900">View Details</a>
          </div>
        </div>

        <div class="px-6 py-5 space-y-6">
          <div>
            <h4 class="text-xl font-semibold text-gray-900 mb-2">{{ .Project.Name }}</h4>
            <p class="text-sm text-gray-500">{{ .Project.Description }}</p>
          </div>
          
          <div class="border-t border-gray-200 pt-4">
            <h5 class="text-sm font-medium text-gray-500 mb-3">Navigation</h5>
            <nav class="space-y-2">
              <a href="/projects/{{ .Project.ID }}/tasks" class="flex items-center px-3 py-2 text-sm font-medium rounded-md text-gray-700 hover:text-indigo-600 hover:bg-indigo-50">
                <svg class="mr-3 h-5 w-5 text-gray-400" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2" />
                </svg>
                All Tasks
              </a>
              <a href="/projects/{{ .Project.ID }}/tasks/new" class="flex items-center px-3 py-2 text-sm font-medium rounded-md text-gray-700 hover:text-indigo-600 hover:bg-indigo-50">
                <svg class="mr-3 h-5 w-5 text-gray-400" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6" />
                </svg>
                New Task
              </a>
              <a href="/projects" class="flex items-center px-3 py-2 text-sm font-medium rounded-md text-gray-700 hover:text-indigo-600 hover:bg-indigo-50">
                <svg class="mr-3 h-5 w-5 text-gray-400" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6" />
                </svg>
                All Projects
              </a>
            </nav>
          </div>
          
          <div class="border-t border-gray-200 pt-4">
            <h5 class="text-sm font-medium text-gray-500 mb-3">Task Statistics</h5>
            <div class="grid grid-cols-2 gap-4">
              <div class="bg-gray-50 rounded-lg p-3 text-center">
                <div class="text-2xl font-bold text-indigo-600 mb-1">{{ .Task.ID }}</div>
                <div class="text-xs text-gray-500">Task ID</div>
              </div>
              <div class="bg-gray-50 rounded-lg p-3 text-center">
                <div class="text-2xl font-bold text-indigo-600 mb-1">{{ formatTime .Task.CreatedAt }}</div>
                <div class="text-xs text-gray-500">Created</div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>

    <!-- Main content area -->
    <div class="lg:col-span-2">
      <!-- Task header with buttons -->
      <div class="mb-8">
        <div class="flex flex-col md:flex-row md:items-center md:justify-between">
          <div>
            <div class="flex flex-wrap items-center gap-2 mb-3">
              <!-- Task type badge -->
              <span class="px-3 py-1 rounded-full text-xs font-medium 
                {{ if eq .Task.Type "Bug" }}bg-red-100 text-red-800
                {{ else if eq .Task.Type "Story" }}bg-indigo-100 text-indigo-800
                {{ else if eq .Task.Type "Epic" }}bg-purple-100 text-purple-800
                {{ else }}bg-blue-100 text-blue-800{{ end }}
              ">
                {{ .Task.Type }}
              </span>
              
              <!-- Priority badge -->
              <span class="px-3 py-1 rounded-full text-xs font-medium
                {{ if eq .Task.Priority "Critical" }}bg-red-100 text-red-800
                {{ else if eq .Task.Priority "High" }}bg-orange-100 text-orange-800
                {{ else if eq .Task.Priority "Low" }}bg-green-100 text-green-800
                {{ else }}bg-yellow-100 text-yellow-800{{ end }}
              ">
                {{ .Task.Priority }}
              </span>
              
              <!-- Status badge -->
              <span class="px-3 py-1 rounded-full text-xs font-medium
                {{ if eq .Task.Status "Done" }}bg-green-100 text-green-800
                {{ else if eq .Task.Status "In Progress" }}bg-blue-100 text-blue-800
                {{ else }}bg-gray-100 text-gray-800{{ end }}
              ">
                {{ .Task.Status }}
              </span>
            </div>
            <h1 class="text-4xl font-bold text-gray-900 mt-2 mb-1">{{ .Task.Title }}</h1>
          </div>
        </div>

        <div class="flex flex-wrap gap-3 mt-6">
          <a href="/projects/{{ .Project.ID }}/tasks/{{ .Task.ID }}/edit" class="bg-blue-600 hover:bg-blue-700 text-white font-medium py-2 px-4 text-sm rounded-lg transition duration-150 ease-in-out shadow-sm">
            <svg xmlns="http://www.w3.org/2000/svg" class="inline-block h-4 w-4 mr-1 -mt-0.5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z" />
            </svg>
            Edit Task
          </a>
          <button id="deleteTask" class="bg-red-600 hover:bg-red-700 text-white font-medium py-2 px-4 text-sm rounded-lg transition duration-150 ease-in-out shadow-sm">
            <svg xmlns="http://www.w3.org/2000/svg" class="inline-block h-4 w-4 mr-1 -mt-0.5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16" />
            </svg>
            Delete Task
          </button>
          <a href="/projects/{{ .Project.ID }}/tasks" class="border border-gray-300 bg-white hover:bg-gray-50 text-gray-700 font-medium py-2 px-4 text-sm rounded-lg transition duration-150 ease-in-out shadow-sm">
            <svg xmlns="http://www.w3.org/2000/svg" class="inline-block h-4 w-4 mr-1 -mt-0.5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7" />
            </svg>
            Back to Tasks
          </a>
        </div>
      </div>

      <!-- Task information card -->
      <div class="bg-white shadow-lg rounded-xl overflow-hidden border border-gray-100 mb-10">
        <div class="px-8 py-6 bg-gradient-to-r from-blue-50 to-white">
          <h2 class="text-xl leading-6 font-semibold text-gray-900">Task Details</h2>
          <p class="mt-2 text-md text-gray-600">Complete information about this task.</p>
        </div>

        <div class="border-t border-gray-200">
          <dl>
            <!-- Description section -->
            <div class="bg-white px-8 py-6">
              <dt class="text-md font-medium text-gray-600 mb-3">Description</dt>
              <dd class="mt-1 text-md text-gray-900 whitespace-pre-wrap">
                {{ if .Task.Description }}
                  {{ .Task.Description }}
                {{ else }}
                  <span class="text-gray-400 italic">No description provided</span>
                {{ end }}
              </dd>
            </div>

            <div class="border-t border-gray-100"></div>

            <!-- People -->
            <div class="bg-gray-50 px-8 py-6">
              <dt class="text-md font-medium text-gray-600 mb-4">People</dt>
              <dd class="mt-1">
                <div class="grid grid-cols-1 md:grid-cols-2 gap-x-6 gap-y-4">
                  <!-- Assignee information -->
                  <div class="flex">
                    <div class="flex-shrink-0 mr-4">
                      <dt class="text-sm font-medium text-gray-500">Assignee</dt>
                      <dd class="mt-1">
                        {{ if .Task.Assignee }}
                          <div class="flex items-center space-x-3">
                            <div class="flex-shrink-0 h-10 w-10 bg-indigo-100 rounded-full flex items-center justify-center">
                              <span class="text-indigo-800 font-medium text-lg">{{ slice .Task.Assignee.Name 0 1 }}</span>
                            </div>
                            <div>
                              <p class="text-md font-medium text-gray-900">{{ .Task.Assignee.Name }}</p>
                              <p class="text-sm text-gray-500">{{ .Task.Assignee.Email }}</p>
                            </div>
                          </div>
                        {{ else }}
                          <div class="flex items-center space-x-3 mt-1">
                            <div class="flex-shrink-0 h-10 w-10 bg-gray-100 rounded-full flex items-center justify-center">
                              <svg class="h-5 w-5 text-gray-400" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z" />
                              </svg>
                            </div>
                            <div>
                              <p class="text-md font-medium text-gray-400 italic">Unassigned</p>
                            </div>
                          </div>
                        {{ end }}
                      </dd>
                    </div>
                  </div>

                  <!-- Reporter information -->
                  <div class="flex">
                    <div class="flex-shrink-0 mr-4">
                      <dt class="text-sm font-medium text-gray-500">Reporter</dt>
                      <dd class="mt-1">
                        <div class="flex items-center space-x-3">
                          <div class="flex-shrink-0 h-10 w-10 bg-green-100 rounded-full flex items-center justify-center">
                            <span class="text-green-800 font-medium text-lg">{{ slice .Task.Reporter.Name 0 1 }}</span>
                          </div>
                          <div>
                            <p class="text-md font-medium text-gray-900">{{ .Task.Reporter.Name }}</p>
                            <p class="text-sm text-gray-500">{{ .Task.Reporter.Email }}</p>
                          </div>
                        </div>
                      </dd>
                    </div>
                  </div>
                </div>
              </dd>
            </div>

            <div class="border-t border-gray-100"></div>

            <!-- Timing and Planning -->
            <div class="bg-white px-8 py-6">
              <dt class="text-md font-medium text-gray-600 mb-4">Timing and Planning</dt>
              <dd class="mt-1">
                <div class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-x-6 gap-y-4">
                  <!-- Due Date -->
                  <div>
                    <dt class="text-sm font-medium text-gray-500">Due Date</dt>
                    <dd class="mt-1 text-md text-gray-900">
                      {{ if .Task.DueDate }}
                        <div class="flex items-center">
                          <svg class="h-5 w-5 text-gray-400 mr-2" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z" />
                          </svg>
                          {{ formatDate .Task.DueDate }}
                        </div>
                      {{ else }}
                        <span class="text-gray-400 italic">Not set</span>
                      {{ end }}
                    </dd>
                  </div>
                  
                  <!-- Time Estimate -->
                  <div>
                    <dt class="text-sm font-medium text-gray-500">Time Estimate</dt>
                    <dd class="mt-1 text-md text-gray-900">
                      {{ if .Task.TimeEstimate }}
                        <div class="flex items-center">
                          <svg class="h-5 w-5 text-gray-400 mr-2" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z" />
                          </svg>
                          {{ .Task.TimeEstimate }} hours
                        </div>
                      {{ else }}
                        <span class="text-gray-400 italic">Not estimated</span>
                      {{ end }}
                    </dd>
                  </div>
                  
                  <!-- Time Spent -->
                  <div>
                    <dt class="text-sm font-medium text-gray-500">Time Spent</dt>
                    <dd class="mt-1 text-md text-gray-900">
                      {{ if .Task.TimeSpent }}
                        <div class="flex items-center">
                          <svg class="h-5 w-5 text-gray-400 mr-2" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z" />
                          </svg>
                          {{ .Task.TimeSpent }} hours
                        </div>
                      {{ else }}
                        <span class="text-gray-400 italic">No time logged</span>
                      {{ end }}
                    </dd>
                  </div>
                </div>
              </dd>
            </div>

            <div class="border-t border-gray-100"></div>

            <!-- Activity Timeline -->
            <div class="bg-gray-50 px-8 py-6">
              <dt class="text-md font-medium text-gray-600 mb-4">Activity</dt>
              <dd class="mt-1">
                <div class="flow-root">
                  <ul class="-mb-8">
                    <li>
                      <div class="relative pb-8">
                        <span class="absolute top-5 left-5 -ml-px h-full w-0.5 bg-gray-200" aria-hidden="true"></span>
                        <div class="relative flex items-start space-x-3">
                          <div class="relative">
                            <div class="h-10 w-10 rounded-full bg-indigo-100 flex items-center justify-center ring-8 ring-white">
                              <svg class="h-5 w-5 text-indigo-500" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6" />
                              </svg>
                            </div>
                          </div>
                          <div class="min-w-0 flex-1">
                            <div>
                              <div class="text-sm font-medium text-gray-900">Task Created</div>
                              <p class="mt-0.5 text-sm text-gray-500">
                                Created by {{ .Task.Reporter.Name }} on {{ formatTime .Task.CreatedAt }}
                              </p>
                            </div>
                          </div>
                        </div>
                      </div>
                    </li>
                    <li>
                      <div class="relative pb-8">
                        <div class="relative flex items-start space-x-3">
                          <div class="relative">
                            <div class="h-10 w-10 rounded-full bg-blue-100 flex items-center justify-center ring-8 ring-white">
                              <svg class="h-5 w-5 text-blue-500" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z" />
                              </svg>
                            </div>
                          </div>
                          <div class="min-w-0 flex-1">
                            <div>
                              <div class="text-sm font-medium text-gray-900">Last Updated</div>
                              <p class="mt-0.5 text-sm text-gray-500">
                                Last modified on {{ formatTime .Task.UpdatedAt }}
                              </p>
                            </div>
                          </div>
                        </div>
                      </div>
                    </li>
                  </ul>
                </div>
              </dd>
            </div>
          </dl>
        </div>
      </div>

      <!-- Additional related information or actions could be added here -->
      <div class="bg-white shadow-lg rounded-xl overflow-hidden border border-gray-100 mb-8">
        <div class="px-6 py-5 border-b border-gray-200 flex justify-between items-center">
          <h2 class="text-lg font-medium text-gray-900">Actions</h2>
        </div>
        <div class="p-6">
          <div class="space-y-6">
            <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
              <a href="/projects/{{ .Project.ID }}/tasks/{{ .Task.ID }}/edit" class="inline-flex justify-center items-center px-4 py-3 border border-gray-300 shadow-sm text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 transition duration-150 ease-in-out">
                <svg class="mr-3 h-5 w-5 text-gray-400" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z" />
                </svg>
                Edit Task Details
              </a>
              
              <button class="inline-flex justify-center items-center px-4 py-3 border border-gray-300 shadow-sm text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 transition duration-150 ease-in-out">
                <svg class="mr-3 h-5 w-5 text-gray-400" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z" />
                </svg>
                Change Status
              </button>
              
              <button class="inline-flex justify-center items-center px-4 py-3 border border-gray-300 shadow-sm text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 transition duration-150 ease-in-out">
                <svg class="mr-3 h-5 w-5 text-gray-400" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z" />
                </svg>
                Reassign Task
              </button>

              <button class="inline-flex justify-center items-center px-4 py-3 border border-gray-300 shadow-sm text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 transition duration-150 ease-in-out">
                <svg class="mr-3 h-5 w-5 text-gray-400" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2" />
                </svg>
                Clone Task
              </button>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- Delete confirmation modal -->
  <div id="deleteModal" class="fixed z-10 inset-0 overflow-y-auto hidden">
    <div class="flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0">
      <div class="fixed inset-0 transition-opacity" aria-hidden="true">
        <div class="absolute inset-0 bg-gray-500 opacity-75"></div>
      </div>
      <span class="hidden sm:inline-block sm:align-middle sm:h-screen" aria-hidden="true">&#8203;</span>
      <div class="inline-block align-bottom bg-white rounded-xl text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full">
        <div class="bg-white px-6 pt-6 pb-5 sm:p-8">
          <div class="sm:flex sm:items-start">
            <div class="mx-auto flex-shrink-0 flex items-center justify-center h-14 w-14 rounded-full bg-red-100 sm:mx-0 sm:h-12 sm:w-12">
              <svg class="h-7 w-7 text-red-600" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor" aria-hidden="true">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z" />
              </svg>
            </div>
            <div class="mt-3 text-center sm:mt-0 sm:ml-6 sm:text-left">
              <h3 class="text-xl leading-6 font-semibold text-gray-900" id="modal-title">
                Delete task
              </h3>
              <div class="mt-3">
                <p class="text-md text-gray-600">
                  Are you sure you want to delete this task? This action cannot be undone.
                </p>
              </div>
            </div>
          </div>
        </div>
        <div class="bg-gray-50 px-6 py-4 sm:px-8 sm:py-5 sm:flex sm:flex-row-reverse">
          <button id="confirmDelete" type="button" class="w-full inline-flex justify-center rounded-lg border border-transparent shadow-sm px-6 py-3 bg-red-600 text-base font-medium text-white hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500 sm:ml-3 sm:w-auto sm:text-md">
            Delete
          </button>
          <button id="cancelDelete" type="button" class="mt-3 w-full inline-flex justify-center rounded-lg border border-gray-300 shadow-sm px-6 py-3 bg-white text-base font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 sm:mt-0 sm:ml-3 sm:w-auto sm:text-md">
            Cancel
          </button>
        </div>
      </div>
    </div>
  </div>

  <div id="errorMessage" class="mt-6 p-4 bg-red-50 text-red-700 text-md rounded-lg hidden"></div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const deleteButton = document.getElementById('deleteTask');
    const deleteModal = document.getElementById('deleteModal');
    const confirmDelete = document.getElementById('confirmDelete');
    const cancelDelete = document.getElementById('cancelDelete');
    const errorMessage = document.getElementById('errorMessage');
    const successMessage = document.getElementById('successMessage');
    const closeSuccessMessage = document.getElementById('closeSuccessMessage');

    // Check URL for success parameter
    const urlParams = new URLSearchParams(window.location.search);
    if (urlParams.get('success') === 'true') {
      successMessage.classList.remove('hidden');
      
      // Auto-hide success message after 5 seconds
      setTimeout(function() {
        successMessage.classList.add('hidden');
      }, 5000);
    }

    // Show delete confirmation modal
    deleteButton.addEventListener('click', function() {
      deleteModal.classList.remove('hidden');
    });

    // Hide delete confirmation modal
    cancelDelete.addEventListener('click', function() {
      deleteModal.classList.add('hidden');
    });

    // Confirm delete action
    confirmDelete.addEventListener('click', function() {
      errorMessage.classList.add('hidden');
      
      fetch('/api/projects/{{ .Project.ID }}/tasks/{{ .Task.ID }}', {
        method: 'DELETE',
        headers: {
          'Content-Type': 'application/json',
          'Authorization': 'Bearer ' + localStorage.getItem('token')
        }
      })
      .then(response => {
        if (!response.ok) {
          return response.json().then(err => { throw err; });
        }
        return response.json();
      })
      .then(data => {
        window.location.href = '/projects/{{ .Project.ID }}/tasks?success=true&action=deleted';
      })
      .catch(error => {
        deleteModal.classList.add('hidden');
        errorMessage.textContent = error.error || 'An error occurred. Please try again.';
        errorMessage.classList.remove('hidden');
      });
    });

    // Close success message
    closeSuccessMessage.addEventListener('click', function() {
      successMessage.classList.add('hidden');
    });
  });
</script>

{{ template "footer" . }}