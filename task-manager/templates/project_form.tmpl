{{ template "header" . }}

<div class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-10">
  <!-- Page header with improved styling -->
  <div class="mb-8 text-center sm:text-left">
    <div class="border-l-4 border-indigo-600 pl-4 py-1 flex items-center">
      <h1 class="text-3xl font-bold text-gray-900 flex-grow">{{ .Title }}</h1>
      <span class="hidden sm:inline-flex items-center px-3 py-1 rounded-full text-xs font-medium {{ if eq .Method "POST" }}bg-green-100 text-green-800{{ else }}bg-blue-100 text-blue-800{{ end }}">
        {{ if eq .Method "POST" }}New Project{{ else }}Editing Project{{ end }}
      </span>
    </div>
    <p class="mt-2 text-sm text-gray-600 pl-4">
      {{ if eq .Method "POST" }}Create a new project to organize your work and collaborate with your team.{{ else }}Update this project's information to keep everything current.{{ end }}
    </p>
  </div>

  <!-- Enhanced card design for the form -->
  <div class="bg-white shadow-lg rounded-lg overflow-hidden border border-gray-100">
    <!-- Form header section with subtle gradient background -->
    <div class="bg-gradient-to-r from-indigo-50 to-white px-6 py-4 border-b border-gray-200">
      <h2 class="text-lg font-medium text-gray-900">Project Details</h2>
      <p class="mt-1 text-sm text-gray-500">Fill in the information below to {{ if eq .Method "POST" }}create your new project{{ else }}update your project{{ end }}.</p>
    </div>
    
    <div class="px-6 py-5">
      <form id="projectForm" class="space-y-6">
        <!-- Project name field with icon -->
        <div class="relative">
          <label for="name" class="block text-sm font-medium text-gray-700">Project Name</label>
          <div class="mt-1 relative rounded-md shadow-sm">
            <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
              <svg class="h-5 w-5 text-gray-400" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 7v10a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2h-6l-2-2H5a2 2 0 00-2 2z" />
              </svg>
            </div>
            <input type="text" name="name" id="name" value="{{ .Project.Name }}" placeholder="Enter project name"
              class="pl-10 focus:ring-indigo-500 focus:border-indigo-500 block w-full rounded-md border-gray-300 shadow-sm text-base"
              required>
          </div>
          <p class="mt-1 text-xs text-gray-500">Choose a clear, descriptive name for your project.</p>
        </div>

        <!-- Project key field with icon -->
        <div class="relative">
          <label for="key" class="block text-sm font-medium text-gray-700">
            Project Key <span class="text-xs text-gray-500">(2-10 characters, alphanumeric)</span>
          </label>
          <div class="mt-1 relative rounded-md shadow-sm">
            <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
              <svg class="h-5 w-5 text-gray-400" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 20l4-16m2 16l4-16M6 9h14M4 15h14" />
              </svg>
            </div>
            <input type="text" name="key" id="key" value="{{ .Project.Key }}" placeholder="PROJ"
              class="pl-10 focus:ring-indigo-500 focus:border-indigo-500 block w-full rounded-md border-gray-300 shadow-sm uppercase text-base"
              required minlength="2" maxlength="10" pattern="[A-Za-z0-9]+" autocapitalize="characters">
          </div>
          <p class="mt-1 text-xs text-gray-500">This will be used as a prefix for all tasks in this project. Example: TASK, DEV, PROJ</p>
        </div>

        <!-- Description field with icon -->
        <div class="relative">
          <label for="description" class="block text-sm font-medium text-gray-700">Description</label>
          <div class="mt-1 relative rounded-md shadow-sm">
            <div class="absolute inset-y-0 left-0 pl-3 pt-3 flex items-start pointer-events-none">
              <svg class="h-5 w-5 text-gray-400" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h7" />
              </svg>
            </div>
            <textarea name="description" id="description" rows="4" placeholder="Describe your project's purpose and goals"
              class="pl-10 focus:ring-indigo-500 focus:border-indigo-500 block w-full rounded-md border-gray-300 shadow-sm text-base">{{ .Project.Description }}</textarea>
          </div>
          <p class="mt-1 text-xs text-gray-500">Add details about the project's goals, scope, and other relevant information.</p>
        </div>

        <!-- Owner field with icon - Improved select styling -->
        <div class="relative">
          <label for="ownerId" class="block text-sm font-medium text-gray-700">Project Owner</label>
          <div class="mt-1 relative">
            <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none z-10">
              <svg class="h-5 w-5 text-gray-400" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z" />
              </svg>
            </div>
            <div class="relative">
              <select id="ownerId" name="ownerId" 
                class="appearance-none pl-10 pr-10 py-2 focus:ring-indigo-500 focus:border-indigo-500 block w-full rounded-md border-gray-300 shadow-sm text-base bg-white"
                required>
                <option value="" disabled selected hidden>Select a project owner</option>
                {{ range .Users }}
                  <option value="{{ .ID }}" {{ if eq .ID $.Project.OwnerID }}selected{{ end }} class="py-2">
                    {{ .Name }} ({{ .Email }})
                  </option>
                {{ end }}
              </select>
              <div class="pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700">
                <svg class="h-5 w-5 text-gray-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                  <path fill-rule="evenodd" d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z" clip-rule="evenodd" />
                </svg>
              </div>
            </div>
          </div>
          <p class="mt-1 text-xs text-gray-500">The owner is responsible for managing this project.</p>
        </div>

        <!-- Form action buttons with improved styling -->
        <div class="border-t border-gray-200 pt-5 mt-6">
          <div class="flex justify-between items-center">
            <a href="/projects" class="inline-flex items-center text-sm font-medium text-gray-700 hover:text-gray-500 transition-colors duration-150">
              <svg class="mr-2 h-4 w-4" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 19l-7-7m0 0l7-7m-7 7h18" />
              </svg>
              Back to projects
            </a>
            <div class="flex items-center space-x-3">
              <button type="button" onclick="window.location.href='/projects'" 
                class="inline-flex items-center px-4 py-2 border border-gray-300 shadow-sm text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 transition-colors duration-150">
                Cancel
              </button>
              <button type="submit" id="submitButton"
                class="inline-flex items-center px-4 py-2 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 transition-colors duration-150">
                <svg class="mr-2 -ml-1 h-5 w-5" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7" />
                </svg>
                {{ if eq .Method "POST" }}Create Project{{ else }}Update Project{{ end }}
              </button>
              <div id="loadingSpinner" class="hidden mr-2 h-5 w-5">
                <svg class="animate-spin h-5 w-5 text-indigo-600" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                  <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                  <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                </svg>
              </div>
            </div>
          </div>
        </div>

        <!-- Improved error display for better visibility -->
        <div id="formError" class="hidden rounded-md bg-red-50 p-4 mt-4 border border-red-200">
          <div class="flex">
            <div class="flex-shrink-0">
              <svg class="h-5 w-5 text-red-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clip-rule="evenodd" />
              </svg>
            </div>
            <div class="ml-3">
              <p class="text-sm text-red-700" id="formErrorText"></p>
            </div>
          </div>
        </div>
      </form>
    </div>
  </div>
  
  <!-- Tips card for better user guidance -->
  <div class="mt-8 bg-blue-50 border border-blue-100 rounded-lg p-4">
    <h3 class="text-sm font-medium text-blue-800 mb-2">Tips for successful projects</h3>
    <ul class="text-xs text-blue-700 space-y-1 pl-5 list-disc">
      <li>Choose a clear, memorable project name that reflects its purpose</li>
      <li>Use a concise project key that's easy to recognize</li>
      <li>Write a comprehensive description that helps team members understand the project's goals</li>
      <li>Select the right owner who can effectively manage the project</li>
    </ul>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const form = document.getElementById('projectForm');
    const formError = document.getElementById('formError');
    const formErrorText = document.getElementById('formErrorText');
    const submitButton = document.getElementById('submitButton');
    const loadingSpinner = document.getElementById('loadingSpinner');
    const ownerSelect = document.getElementById('ownerId');
    
    // Improve select dropdown styling
    if (ownerSelect.value === '') {
      ownerSelect.classList.add('text-gray-500');
    }
    
    ownerSelect.addEventListener('change', function() {
      if (this.value === '') {
        this.classList.add('text-gray-500');
      } else {
        this.classList.remove('text-gray-500');
      }
    });
    
    // Add visual feedback on form inputs
    const formInputs = form.querySelectorAll('input, textarea, select');
    formInputs.forEach(input => {
      // Add focus animation
      input.addEventListener('focus', function() {
        this.closest('.relative').classList.add('scale-105');
        this.classList.add('border-indigo-300');
      });
      
      input.addEventListener('blur', function() {
        this.closest('.relative').classList.remove('scale-105');
        if (!this.value) {
          this.classList.remove('border-indigo-300');
        }
      });
    });
    
    // Handle form submission
    form.addEventListener('submit', function(e) {
      e.preventDefault();
      
      // Hide error message
      formError.classList.add('hidden');
      
      // Show loading state
      submitButton.disabled = true;
      submitButton.classList.add('opacity-75');
      loadingSpinner.classList.remove('hidden');
      
      const formData = {
        name: document.getElementById('name').value,
        key: document.getElementById('key').value.toUpperCase(),
        description: document.getElementById('description').value,
        ownerId: parseInt(document.getElementById('ownerId').value, 10)
      };
      
      fetch('{{ .FormAction }}', {
        method: '{{ .Method }}',
        headers: {
          'Content-Type': 'application/json'
        },
        credentials: 'same-origin', // Use cookies for authentication
        body: JSON.stringify(formData)
      })
      .then(response => {
        if (!response.ok) {
          return response.json().then(err => { throw err; });
        }
        return response.json();
      })
      .then(data => {
        window.location.href = '/projects/' + data.data.id;
      })
      .catch(error => {
        // Show error message
        formErrorText.textContent = error.error || 'An error occurred. Please try again.';
        formError.classList.remove('hidden');
        
        // Smooth scroll to error
        formError.scrollIntoView({ behavior: 'smooth', block: 'center' });
      })
      .finally(() => {
        // Reset button state
        submitButton.disabled = false;
        submitButton.classList.remove('opacity-75');
        loadingSpinner.classList.add('hidden');
      });
    });
    
    // Auto-capitalize project key
    const keyInput = document.getElementById('key');
    keyInput.addEventListener('input', function() {
      this.value = this.value.toUpperCase();
    });
  });
</script>

{{ template "footer" . }}